<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" basedir="." name="global">

    <property name="jdk.version" value="1.8"/>
    <property name="source.encoding" value="UTF-8"/>
    <property name="app.name" value="SSM_Blog"/>
    <property name="app.version" value="1.0"/>

    <artifact:pom id="pom.this" file="pom.xml"/>

    <artifact:dependencies filesetid="fileset.lib.runtime" pathid="path.lib.runtime" id="path.lib.runtime"
                           pomrefid="pom.this" usescope="runtime"/>
    <artifact:dependencies filesetid="fileset.lib.provided" pathid="path.lib.provided" id="path.lib.provided"
                           pomrefid="pom.this" usescope="provided"/>
    <artifact:dependencies filesetid="fileset.lib.test" pathid="path.lib.test" id="path.lib.test" pomrefid="pom.this"
                           usescope="test"/>

    <fileset id="resource" dir="src/main/resource"/>

    <path id="src-test">
        <fileset dir="src/main/java"/>
        <fileset dir="src/main/test"/>
    </path>
    <path id="classpath.project">
        <path refid="path.lib.runtime"/>
        <path refid="path.lib.provided"/>
        <pathelement location="target/classes"/>
    </path>

    <path id="classpath.project-test">
        <path refid="classpath.project"/>
        <path refid="path.lib.test"/>
        <pathelement location="target/classes"/>
    </path>

    <target name="clean">
        <delete dir="target" quiet="true"/>
        <mkdir dir="target"/>
        <mkdir dir="target/classes"/>
    </target>

    <target name="compile">
        <mkdir dir="target/classes"/>
        <javac fork="true" memorymaximumsize="512m" srcdir="src/main/java" destdir="target/classes"
               source="${jdk.version}" target="${jdk.version}" encoding="${source.encoding}">
            <classpath>
                <path refid="classpath.project"/>
            </classpath>
        </javac>

        <copy todir="target/classes">
            <fileset dir="${resource.dir}">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="target/classes/${mapping.classpath}">
            <fileset dir="${mapping.dir}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    <target name="compile-test">
        <mkdir dir="target/classes"/>
        <javac fork="true" memorymaximumsize="512m" srcdir="src/main/test" destdir="target/classes"
               source="${jdk.version}" target="${jdk.version}" encoding="${source.encoding}">
            <classpath>
                <path refid="classpath.project-test"/>
            </classpath>
        </javac>
    </target>
    <target name="dist" depends="compile">
        <copy todir="target/classes">
            <fileset dir="src/main/java" includes="com/**/*.vm"/>
        </copy>
        <jar destfile="target/${app.name}-${app.version}.jar">
            <fileset dir="target/classes">
                <include name="com/**"/>
            </fileset>
        </jar>
    </target>
    <target name="dist-src">
        <mkdir dir="target"/>
        <jar destfile="target/${app.name}-${app.version}.jar">
            <fileset dir="target/classes">
                <include name="com/**"/>
            </fileset>
        </jar>
    </target>

    <target name="deploy" depends="install" description="general deploy project task">
    </target>

    <target name="install" depends="dist">
        <artifact:install file="target/${app.name}-${app.version}.jar">
            <pom refid="pom.this"/>
        </artifact:install>
    </target>


    <target name="releases" depends="dist">
        <artifact:deploy file="target/${app.name}-${app.version}.jar">
            <remoterepository url="${release.repository.url}">
                <authentication username="${nexus.user.name}" password="${nexus.user.password}"/>
            </remoterepository>
        </artifact:deploy>
    </target>

    <target name="snapshots" depends="dist">
        <artifact:deploy file="target/${app.name}-${app.version}.jar" uniqueversion="true">
            <remoterepository url="${release.repository.url}">
                <authentication username="${nexus.user.name}" password="${nexus.user.password}"/>
            </remoterepository>
        </artifact:deploy>
    </target>


    <target name="test">
        <mkdir dir="target"/>
        <jar destfile="target/test-classes/ly/hotupdate/TestInstrument1.jar">
            <fileset dir="target/test-classes/ly/hotupdate">
                <!--<include name="com/**"/>-->
                <include name="AgentMain.class"/>
            </fileset>
            <manifest>
                <attribute name="Agent-Class" value="ly.hotupdate.AgentMain" />
                <attribute name="Can-Redefine-Classes" value="true" />
                <attribute name="Can-Retransform-Classes" value="true" />
                <!--<attribute name="Premain-Class" value="ly.hotupdate.AgentMain"/>-->
            </manifest>

        </jar>
    </target>

</project>